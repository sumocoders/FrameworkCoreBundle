{% import _self as formMacros %}

{% block form_label %}
  {% if 'checkbox' not in block_prefixes or widget_checkbox_label in ['label', 'both'] %}
    {% if label is not same as(false) %}
      {% if label is empty %}
        {% set label = toTranslation(id)|trans({}, translation_domain)|capitalize %}
      {% else %}
        {% set label = label|trans({}, translation_domain)|capitalize %}
      {% endif %}
      {% if not compound %}
        {% set label_attr = label_attr|merge({'for': id}) %}
      {% endif %}
      {% set label_attr_class = '' %}
      {% set label_attr = label_attr|merge({'class': label_attr.class|default('') ~ " " ~ label_attr_class ~ (required ? ' required' : ' optional') }) %}
      <label {% for attrname,attrvalue in label_attr %} {{ attrname }}="{{ attrvalue }}"{% endfor %}>{{ label|trans|capitalize }}&#32;{{- block('label_asterisk') }}</label>
    {% endif %}
  {% endif %}
{% endblock form_label %}

{%- block label_asterisk -%}
  {% apply spaceless %}
    {% if required %}
      <abbr title="{{ 'forms.labels.required'|trans({}, translation_domain) }}">*</abbr>
    {% endif %}
  {% endapply %}
{%- endblock label_asterisk -%}

{% block collection_widget %}
  {% import _self as formMacros %}

  {% apply spaceless %}
    {% if prototype is defined %}
      {% set attr = attr|merge({'data-prototype-name': prototype.vars.name}) %}
      {% set attr = attr|merge({'data-prototype-label': prototype.vars.label}) %}
    {% endif %}

    {% set attr = attr|merge({'data-allow-add': allow_add ? 1 : 0}) %}
    {% set attr = attr|merge({'data-allow-remove': allow_delete ? 1 : 0 }) %}
    {% set attr = attr|merge({'data-name-prefix': full_name}) %}
    {% set attr = attr|merge({'data-role': 'collection'}) %}

    <div
        {{ block('widget_container_attributes') }}
        {% if prototype is defined %}
          data-prototype="{{ formMacros.renderCollectionItem(prototype, allow_delete)|e('html_attr') }}"
        {% endif %}
        class="card bg-light">
      <div class="card-body">
        {{ block('collection_rows') }}
        {{ form_rest(form) }}
      </div>
    </div>
    {{ block('form_errors') }}
  {% endapply %}
{% endblock collection_widget %}

{% block collection_rows %}
  {% apply spaceless %}
    {% import _self as formMacros %}
    {{ form_errors(form) }}

    {% if allow_add %}
      <div class="d-flex justify-content-end">
        <button type="button" class="btn btn-outline-success btn-sm mb-2" data-role="collection-add-button">
          <i class="fas fa-plus"></i> {{ 'forms.buttons.addItem'|trans|capitalize }}
        </button>
      </div>
    {% endif %}

    <ul data-role="collection-item-container" class="list-unstyled">
      {% for child in form %}
        {{ formMacros.renderCollectionItem(child, allow_delete) }}
      {% endfor %}
    </ul>

    {% if allow_add %}
      <div class="d-flex justify-content-end">
        <button type="button" class="btn btn-outline-success btn-sm" data-role="collection-add-button" hidden>
          <i class="fas fa-plus"></i> {{ 'forms.buttons.addItem'|trans|capitalize }}
        </button>
      </div>
    {% endif %}
  {% endapply %}
{% endblock collection_rows %}

{% macro renderCollectionItem(item, allow_delete) %}
  <li>
    <div class="card mb-3 ml-4 pl-4 collection-item" data-role="collection-item">
      <div class="card-body">
        {% if allow_delete is defined and allow_delete %}
          <div class="d-flex justify-content-end">
            <button type="button" class="btn btn-outline-danger btn-sm"
                    data-role="collection-remove-button" title="{{ 'forms.buttons.removeItem'|trans|capitalize }}">
              <i class="fas fa-trash"></i> <span class="sr-only">{{ 'forms.buttons.removeItem'|trans|capitalize }}</span>
            </button>
          </div>
        {% endif %}
        <i class="fas fa-bars btn btn-default collection-item-drag-and-drop" title="{{ 'forms.buttons.changeOrder'|trans|capitalize }}" data-role="collection-item-change-order"></i>
        {{ form_row(item) }}
      </div>
    </div>
  </li>
{% endmacro %}

{%- block form_errors -%}
  {% if form.parent is null %}
    {% if not form.vars.valid %}
      <div class="alert alert-danger" role="alert">
        {{ 'forms.message.hasErrors'|trans|capitalize }}:
        <ul class="error-list">
          {% for error in form.vars.errors %}
            {{ error.message|nl2br }}
          {% endfor %}

          {% for child in form.children %}
            {% set label = child.vars.label %}
            {% if label is not same as(false) %}
              {% if label is empty %}
                {% set label = toTranslation(child.vars.id)|trans({}, child.vars.translation_domain)|capitalize %}
              {% else %}
                {% set label = label|trans({}, child.vars.translation_domain)|capitalize %}
              {% endif %}
            {% endif %}
            {% if child.vars.valid is defined and child.vars.valid == false %}
              {% for error in child.vars.errors %}
                <li class="error-list-item">
                  <a href="#{{ child.vars.id }}">
                    {% if label is not same as(false) %}{{ label|trans|capitalize }}: {% endif %}{{ error.message }}
                  </a>
                </li>
              {% endfor %}
            {% endif %}
          {% endfor %}
        </ul>
      </div>
    {% endif %}
  {% else %}
    {% if errors|length > 0 -%}
      {%- for error in errors -%}
        <div class="invalid-feedback">{{ error.message }}</div>
      {%- endfor -%}
    {%- endif %}
  {% endif %}
{%- endblock form_errors -%}

{% block image_widget %}
  {% apply spaceless %}
    <div class="form-group">
      {{ form_widget(form.file) }}
      {{ form_errors(form.file) }}
    </div>
    {% set show_preview = show_preview and data is not null and data.fileName is not empty %}
    {% if show_preview or show_remove_image %}
      <div class="form-group">
        {% if show_preview and preview_url %}
          <img class="{% if preview_class is defined and preview_class is not empty %}{{ preview_class }}{% endif %}"
            src="{{ preview_url }}">
        {% endif %}
        {% if show_remove_image %}
          {{ form_widget(form.remove) }}
        {% endif %}
      </div>
    {% endif %}
  {% endapply %}
{% endblock %}

{% block sumoFile_widget %}
  {% apply spaceless %}
    <div class="form-group">
      {{ form_widget(form.file) }}
      {{ form_errors(form.file) }}
    </div>
    {% set show_preview = show_preview and data is not null and data.fileName is not empty %}
    {% if show_preview or show_remove_file %}
      <div class="form-group">
        {% if show_preview and preview_url %}
          <a href="{{ preview_url }}" class="btn btn-xs btn-default" target="_blank">
            <span class="fas fa-eye" aria-hidden="true"></span>
            {{ preview_label|trans|capitalize }}
          </a>
        {% endif %}
        {% if show_remove_file %}
          {{ form_widget(form.remove) }}
        {% endif %}
      </div>
    {% endif %}
  {% endapply %}
{% endblock %}

{% block date_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
    {{- form_label(form) -}}
    {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock date_row %}

{% block date_widget %}
  {% apply spaceless %}
    {% if widget == 'single_text' %}
      {% if datepicker %}
        {%- if not valid -%}
          {% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}
        {%- endif -%}
        {%- if help is not empty -%}
          {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
        {%- endif -%}

        <div class="input-group date" id="{{ form.vars.id }}" data-target-input="nearest" data-role="date-picker">
          <input
              type="text"
              class="form-control {{ attr.class|default('')|join(' ') }} datetimepicker-input"
              data-target="#{{ form.vars.id }}"
              data-toggle="datetimepicker"
              value="{{ value }}"
              {% if minimum_date %}data-min-date="{{ minimum_date }}"{% endif %}
              {% if maximum_date %}data-max-date="{{ maximum_date }}"{% endif %}
              {{ block('widget_attributes') }}
              {% if read_only is defined and read_only %} readonly="readonly"{% endif %}
              {% if disabled %} disabled="disabled"{% endif %}
              {% if required %} required="required"{% endif %}
          >
          <div class="input-group-append" data-target="#{{ form.vars.id }}" data-toggle="datetimepicker">
            <div class="input-group-text">
              <i class="fas fa-calendar"></i>
            </div>
          </div>
          {{- form_errors(form) -}}
        </div>
        {{- form_help(form) -}}
      {% else %}
        {{ block('form_widget_simple') }}
      {% endif %}
    {% else %}
      {% if dont_render_row is not defined or not dont_render_row %}
        <div class="row date-widget">
      {% endif %}
      {% set attr = attr|merge({'class': attr.class|default('inline')}) %}
      {% set year_widget = form_widget(form.year, {'attr': {'class': attr.widget_class|default('') ~ 'year',}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) %}
      {% set month_widget = form_widget(form.month, {'attr': {'class': attr.widget_class|default('') ~ 'month'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) %}
      {% set day_widget = form_widget(form.day, {'attr': {'class': attr.widget_class|default('') ~ 'day'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) %}
      <div class="col-md-2">{{ day_widget|raw }}</div>
      <span class="pull-left date-separator">{{ divider }}</span>
      <div class="col-md-2">{{ month_widget|raw }}</div>
      <span class="pull-left date-separator">{{ divider }}</span>
      <div class="col-md-2">{{ year_widget|raw }}</div>
      {% if dont_render_row is not defined or not dont_render_row %}
        </div>
      {% endif %}
    {% endif %}
    {% if helper_text %}
      {{ block('helper_text') }}
    {% endif %}
  {% endapply %}
{% endblock date_widget %}

{% block time_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
    {{- form_label(form) -}}
    {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock time_row %}

{% block time_widget %}
  {% apply spaceless %}
    {% if widget == 'single_text' %}
      {% if timepicker is defined %}
        {%- if not valid -%}
          {% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}
        {%- endif -%}
        {%- if help is not empty -%}
          {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
        {%- endif -%}
        <div class="input-group date" id="{{ form.vars.id }}" data-target-input="nearest" data-role="time-picker">
          <input
              type="text"
              class="form-control {{ attr.class|default('')|join(' ') }} datetimepicker-input"
              data-target="#{{ form.vars.id }}"
              data-toggle="datetimepicker"
              value="{{ value }}"
              {{ block('widget_attributes') }}
              {% if read_only is defined and read_only %} readonly="readonly"{% endif %}
              {% if disabled %} disabled="disabled"{% endif %}
              {% if required %} required="required"{% endif %}
          >
          <div class="input-group-append" data-target="#{{ form.vars.id }}" data-toggle="datetimepicker">
            <div class="input-group-text">
              <i class="fas fa-clock"></i>
            </div>
          </div>
          {{- form_errors(form) -}}
        </div>
        {{- form_help(form) -}}
      {% else %}
        {{ block('form_widget_simple') }}
      {% endif %}
    {% else %}
      {% set attr = attr|merge({'class': attr.class|default('')}) %}
      {% apply spaceless %}
        {% if dont_render_row is not defined or not dont_render_row %}
          <div class="row time-widget">
        {% endif %}
        <div class="col-md-2">
          {{ form_widget(form.hour, { 'attr': {  'size': '1'}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
        </div>
        <span class='pull-left date-separator'>:</span>
        <div class="col-md-2">
          {{ form_widget(form.minute, { 'attr': { 'size': '1' }, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}
        </div>
        {% if with_seconds %}
          <span class='pull-left date-separator'>:</span>
          <div class="col-md-2">
            {{ form_widget(form.second, { 'attr': { 'size': '1' }, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2') }) }}
          </div>
        {% endif %}
        {% if dont_render_row is not defined or not dont_render_row %}
          </div>
        {% endif %}
      {% endapply %}
    {% endif %}
    {% if helper_text %}
      {{ block('helper_text') }}
    {% endif %}
  {% endapply %}
{% endblock time_widget %}

{% block datetime_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
    {{- form_label(form) -}}
    {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock datetime_row %}

{% block datetime_widget %}
  {% apply spaceless %}
    {% if widget == 'single_text' %}
      {% if datetimepicker is defined %}
        {%- if not valid -%}
          {% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}
        {%- endif -%}
        {%- if help is not empty -%}
          {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
        {%- endif -%}
        <div class="input-group date" id="{{ form.vars.id }}" data-target-input="nearest" data-role="date-time-picker">
          <input
              type="text"
              class="form-control {{ attr.class|default('')|join(' ') }} datetimepicker-input"
              data-target="#{{ form.vars.id }}"
              data-toggle="datetimepicker"
              value="{{ value }}"
              {% if minimum_date %}data-min-date="{{ minimum_date }}"{% endif %}
              {% if maximum_date %}data-max-date="{{ maximum_date }}"{% endif %}
              {{ block('widget_attributes') }}
              {% if read_only is defined and read_only %} readonly="readonly"{% endif %}
              {% if disabled %} disabled="disabled"{% endif %}
              {% if required %} required="required"{% endif %}
          >
          <div class="input-group-append" data-target="#{{ form.vars.id }}" data-toggle="datetimepicker">
            <div class="input-group-text">
              <i class="fas fa-calendar"></i>
            </div>
          </div>
          {{- form_errors(form) -}}
        </div>
        {{- form_help(form) -}}
      {% else %}
        {{ block('form_widget_simple') }}
      {% endif %}
    {% else %}
      {% set attr = attr|merge({'class': attr.class|default('row datetime-widget')}) %}
      <div {{ block('widget_container_attributes') }}>
        {{ form_errors(form.date) }}
        {{ form_errors(form.time) }}
        <div class="col">{{ form_widget(form.date, {'dont_render_row': true, 'attr': {'class': attr.widget_class|default('')}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-3')}) }}</div>
        <div class="col">{{ form_widget(form.time, {'dont_render_row': true, 'attr': {'class': attr.widget_class|default('')}, 'horizontal_input_wrapper_class': horizontal_input_wrapper_class|default('col-sm-2')}) }}</div>
      </div>
    {% endif %}
    {% if helper_text %}
      {{ block('helper_text') }}
    {% endif %}
  {% endapply %}
{% endblock datetime_widget %}

{% block helper_text -%}
  <small class="form-text text-muted">
    {{ helper_text }}
  </small>
{%- endblock %}

{% block form_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
    {{- form_label(form) -}}
    {{- form_widget(form, widget_attr) -}}
    {{- form_errors(form) -}}
    {{- form_help(form) -}}
  </{{ element|default('div') }}>
{%- endblock form_row %}

{% block select_2_errors %}
  {% if errors|length > 0 -%}
    {%- for error in errors -%}
      <div class="invalid-feedback d-block">{{ error.message }}</div>
    {%- endfor -%}
  {%- endif %}
{% endblock select_2_errors %}

{% block select_2_widget %}
  <select
    name="{{ full_name }}"
    id="{{ id }}"
    {% set attr = attr|merge({'class': attr.class|default('select2')}) %}
    {{ form.vars.multiple ? 'multiple' : '' }}
    {{ block('widget_attributes') }}
  >
    {% if value is not empty %}

      {% if select2_value is iterable %}
        {% for key, value in select2_value %}
          <option value="{{ key }}" selected="selected">{{ value }}</option>
        {% endfor %}
      {% else %}
        <option value="{{ value }}" selected="selected">{{ select2_value }}</option>
      {% endif %}

    {% endif %}
  </select>
{% endblock %}
