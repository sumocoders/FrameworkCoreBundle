{% use 'bootstrap_5_layout.html.twig' %}
{% import _self as formMacros %}

{%- block form_start -%}
    {% if attr.id is not defined %}
        {% set attr = attr|merge({'id': form.vars.id}) %}
    {% endif %}
    {{ parent() }}
{%- endblock form_start -%}

{%- block form_label -%}
  {% if label is not same as(false) -%}
    {%- set parent_label_class = parent_label_class|default(label_attr.class|default('')) -%}
    {% if label is empty %}
      {% set label = name|humanize|trans({}, translation_domain)|ucfirst  %}
    {% endif %}
    {%- if compound is defined and compound -%}
      {%- set element = 'legend' -%}
      {%- if 'col-form-label' not in parent_label_class -%}
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ' col-form-label' )|trim}) -%}
      {%- endif -%}
    {%- else -%}
      {%- set row_class = row_class|default(row_attr.class|default('')) -%}
      {%- set label_attr = label_attr|merge({for: id}) -%}
      {%- if 'col-form-label' not in parent_label_class -%}
        {%- set label_attr = label_attr|merge({class: (label_attr.class|default('') ~ ('input-group' in row_class ? ' input-group-text' : ' form-label') )|trim}) -%}
      {%- endif -%}
    {%- endif -%}
    <{{ element|default('label') }}{% if label_attr %}{% with { attr: label_attr } %}{{ block('attributes') }}{% endwith %}{% endif %}>
    {%- if translation_domain is same as(false) -%}
      {%- if label_html is same as(false) -%}
        {{- label -}}
      {%- else -%}
        {{- label|raw -}}
      {%- endif -%}
    {%- else -%}
      {%- if label_html is same as(false) -%}
        {{- label|trans(label_translation_parameters, translation_domain)|ucfirst -}}{{- block('label_asterisk') -}}
      {%- else -%}
        {{- label|trans(label_translation_parameters, translation_domain)|ucfirst|raw -}}{{- block('label_asterisk') -}}
      {%- endif -%}
    {%- endif -%}
    </{{ element|default('label') }}>
  {%- endif -%}
{%- endblock form_label %}

{%- block label_asterisk -%}
  {%- if required -%}
    <abbr title="{{ 'forms.labels.required'|trans({}, translation_domain) }}">*</abbr>
  {%- endif -%}
{%- endblock label_asterisk -%}

{%- block form_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~"_help"}} -%}
  {%- endif -%}
  {%- set row_class = row_class|default(row_attr.class|default('form-group')|trim) -%}
  <{{ element|default('div') }}{% with {attr: row_attr|merge({class: row_class})} %}{{ block('attributes') }}{% endwith %}>
  {%- if 'form-floating' in row_class -%}
    {{- form_widget(form, widget_attr) -}}
    {{- form_label(form) -}}
  {%- else -%}
    {{- form_label(form) -}}
    {{- form_widget(form, widget_attr) -}}
  {%- endif -%}
  {{- form_help(form) -}}
  {{- form_errors(form) -}}
  </{{ element|default('div') }}>
{%- endblock form_row %}

{%- block collection_widget -%}
  {% import _self as formMacros %}

  {% if prototype is defined %}
    {% set attr = attr|merge({'data-prototype-name': prototype.vars.name}) %}
    {% set attr = attr|merge({'data-prototype-label': prototype.vars.label}) %}
  {% endif %}

  {% set attr = attr|merge({'data-allow-drag-and-drop': allow_drag_and_drop ? 1 : 0}) %}
  {% set attr = attr|merge({'data-allow-add': allow_add ? 1 : 0}) %}
  {% set attr = attr|merge({'data-allow-remove': allow_delete ? 1 : 0}) %}
  {% set attr = attr|merge({'data-name-prefix': full_name}) %}
  {% set attr = attr|merge({'data-role': 'collection'}) %}
  {% set attr = attr|merge({'data-min': minimum_required_items, 'data-max': maximum_required_items}) %}

  <div
    {{ block('widget_container_attributes') }}
    {% if prototype is defined %}
      data-prototype="{{ formMacros.renderCollectionItem(prototype, allow_delete, allow_drag_and_drop)|e('html_attr') }}"
    {% endif %}
    class="card card-collection{% if allow_drag_and_drop is defined and allow_drag_and_drop %} card-collection-drag{% endif %}"
    data-controller="form-collection"
  >
    <div class="card-body">
      {{ block('collection_rows') }}
      {{ form_rest(form) }}
    </div>
  </div>
  {{ block('form_errors') }}
{%- endblock collection_widget -%}

{%- block collection_rows -%}
  {% import _self as formMacros %}
  {{ form_errors(form) }}

  <ul data-role="collection-item-container" class="list-unstyled" data-form-collection-target="itemContainer">
    {% for child in form %}
      {{ formMacros.renderCollectionItem(child, allow_delete, allow_drag_and_drop) }}
    {% endfor %}
  </ul>

  {% if allow_add %}
    <button type="button" class="btn btn-success btn-sm" data-action="form-collection#addItem" data-form-collection-target="addButton">
      <i class="fas fa-plus me-2"></i> {{ add_button_label|trans|ucfirst }}
    </button>
  {% endif %}
{%- endblock collection_rows -%}

{% macro renderCollectionItem(item, allow_delete, allow_drag_and_drop) %}
  <li>
    <div class="card card-collection-item collection-item" data-role="collection-item">
      <div class="card-body">
        {% if allow_drag_and_drop is defined and allow_drag_and_drop %}
          <span class="btn btn-secondary collection-item-drag-and-drop"
             title="{{ 'forms.buttons.changeOrder'|trans|ucfirst }}"
             data-role="collection-item-change-order"
          >
            <i class="fas fa-ellipsis-v"></i>
          </span>
        {% endif %}
        {{ form_widget(item) }}
        {{ form_errors(item) }}
        {% if allow_delete is defined and allow_delete %}
          <button type="button" class="btn btn-outline-danger collection-item-delete"  title="{{ 'forms.buttons.removeItem'|trans|ucfirst }}" data-action="form-collection#deleteItem">
            <i class="fas fa-trash"></i> <span class="visually-hidden">{{ 'forms.buttons.removeItem'|trans|ucfirst }}</span>
          </button>
        {% endif %}
      </div>
    </div>
  </li>
{% endmacro %}

{%- block image_widget -%}
  <div class="form-group">
    {{ form_widget(form.file) }}
    {{ form_errors(form.file) }}
  </div>
  {% set show_preview = show_preview and data is not null and data.fileName is not empty %}
  {% if show_preview or show_remove_image %}
    <div class="form-group">
      {% if show_preview and preview_url %}
        <img class="{% if preview_class is defined and preview_class is not empty %}{{ preview_class }}{% endif %}"
             src="{{ preview_url }}">
      {% endif %}
      {% if show_remove_image %}
        {{ form_widget(form.remove) }}
      {% endif %}
    </div>
  {% endif %}
{%- endblock -%}

{%- block sumoFile_widget -%}
  <div class="form-group">
    {{ form_widget(form.file) }}
    {{ form_errors(form.file) }}
  </div>
  {% set show_preview = show_preview and data is not null and data.fileName is not empty %}
  {% if show_preview or show_remove_file %}
    <div class="form-group">
      {% if show_preview and preview_url %}
        <a href="{{ preview_url }}" class="btn btn-xs btn-default" target="_blank">
          <span class="fas fa-eye" aria-hidden="true"></span>
          {{ preview_label|trans|ucfirst }}
        </a>
      {% endif %}
      {% if show_remove_file %}
        {{ form_widget(form.remove) }}
      {% endif %}
    </div>
  {% endif %}
{%- endblock -%}

{% block date_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
  {{- form_label(form) -}}
  {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock date_row %}

{%- block date_widget -%}
  {%- if widget == 'single_text' -%}
    {% set attr = attr|merge({'data-controller': 'date-time-picker'}) -%}
    {%- if not valid -%}{% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}{%- endif -%}
    {%- if help is not empty -%}{%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}{%- endif -%}
    {# Its hardcoded for the symfony format because the patterns don't match #}
    {% if format is defined and format == 'dd/MM/yyyy' %}{% set attr = attr|merge({'data-date-format': 'd/m/Y'}) -%}{% endif %}
    {# The format needs to be defined before any min or max date #}
    {% if minimum_date %}{% set attr = attr|merge({'data-min-date': minimum_date|date('d/m/Y')}) -%}{% endif %}
    {% if maximum_date %}{% set attr = attr|merge({'data-max-date': maximum_date|date('d/m/Y')}) -%}{% endif %}
    {% if read_only is defined and read_only %}{% set attr = attr|merge({'readonly': 'readonly'}) -%}{% endif %}
    {% if disabled %}{% set attr = attr|merge({'disabled': 'disabled'}) -%}{% endif %}
    {% if required %}{% set attr = attr|merge({'required': 'required'}) -%}{% endif %}

    <div class="input-group">
      <div class="input-group-text">
        <i class="fas fa-calendar"></i>
      </div>
      {{- block('form_widget_simple') -}}
    </div>

    {{- form_errors(form) -}}
    {{- form_help(form) -}}
  {% else %}
    {% if dont_render_row is not defined or not dont_render_row %}
      <div class="row align-items-center">
    {% endif %}

    <div class="col-md-3">
      {%- if label is not same as(false) -%}{{ form_label(form.day, null, { 'label_attr': {'class': 'visually-hidden'} }) }}{%- endif -%}
      {{ form_widget(form.day) }}
    </div>
    <span>{{ divider }}</span>
    <div class="col-md-3">
      {%- if label is not same as(false) -%}{{ form_label(form.month, null, { 'label_attr': {'class': 'visually-hidden'} }) }}{%- endif -%}
      {{ form_widget(form.month) }}
    </div>
    <span>{{ divider }}</span>
    <div class="col-md-3">
      {%- if label is not same as(false) -%}{{ form_label(form.year, null, { 'label_attr': {'class': 'visually-hidden'} }) }}{%- endif -%}
      {{ form_widget(form.year) }}
    </div>

    {% if dont_render_row is not defined or not dont_render_row %}
      </div>
    {% endif %}
  {%- endif -%}
  {% if helper_text %}
    {{ block('helper_text') }}
  {% endif %}
{%- endblock date_widget %}

{% block time_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
  {{- form_label(form) -}}
  {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock time_row %}

{%- block time_widget -%}
  {% if widget == 'single_text' %}
    {% set attr = attr|merge({'data-controller': 'date-time-picker', 'data-date-time-picker-enable-time-value': 'true', 'data-date-time-picker-show-calendar-value': 'false'}) -%}
    {% set attr = attr|merge({'data-time_24hr': 'true'}) -%}
    {%- if not valid -%}{% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}{%- endif -%}
    {%- if help is not empty -%}{%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}{%- endif -%}
    {# Its hardcoded for the symfony format because the patterns don't match #}
    {% if format is defined and format == 'HH:mm' %}{% set attr = attr|merge({'data-date-format': 'H:i'}) -%}{% endif %}
    {% if read_only is defined and read_only %}{% set attr = attr|merge({'readonly': 'readonly'}) -%}{% endif %}
    {% if disabled %}{% set attr = attr|merge({'disabled': 'disabled'}) -%}{% endif %}
    {% if required %}{% set attr = attr|merge({'required': 'required'}) -%}{% endif %}

    <div class="input-group">
      <div class="input-group-text">
        <i class="fas fa-clock"></i>
      </div>
      {{- block('form_widget_simple') -}}
      {% if not required %}
        <button class="btn btn-outline-secondary" type="button" data-flatpicker-clear>
          <i class="fas fa-times"></i>
        </button>
      {% endif %}

    </div>

  {% else %}
    {% if dont_render_row is not defined or not dont_render_row %}
      <div class="row">
    {% endif %}

    <div class="col-md-3">
      {%- if label is not same as(false) -%}{{ form_label(form.hour, null, { 'label_attr': {'class': 'visually-hidden'} }) }}{%- endif -%}
      {{ form_widget(form.hour) }}
    </div>
    <div class="col-md-1 text-center">
      <span>{{ divider }}</span>
    </div>
    <div class="col-md-3">
      {%- if label is not same as(false) -%}{{ form_label(form.minute, null, { 'label_attr': {'class': 'visually-hidden'} }) }}{%- endif -%}
      {{ form_widget(form.minute) }}
    </div>
    {% if with_seconds %}
      <div class="col-md-1 text-center">
        <span>{{ divider }}</span>
      </div>
      <div class="col-md-3">
        {%- if label is not same as(false) -%}{{ form_label(form.second, null, { 'label_attr': {'class': 'visually-hidden'} }) }}{%- endif -%}
        {{ form_widget(form.second) }}
      </div>
    {% endif %}

    {% if dont_render_row is not defined or not dont_render_row %}
      </div>
    {% endif %}
  {% endif %}

  {{- form_errors(form) -}}
  {{- form_help(form) -}}
{%- endblock time_widget %}

{% block datetime_row -%}
  {%- if compound is defined and compound -%}
    {%- set element = 'fieldset' -%}
  {%- endif -%}
  {%- set widget_attr = {} -%}
  {%- if help is not empty -%}
    {%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}
  {%- endif -%}
  <{{ element|default('div') }} class="form-group">
  {{- form_label(form) -}}
  {{- form_widget(form, widget_attr) -}}
  </{{ element|default('div') }}>
{%- endblock datetime_row %}

{%- block datetime_widget -%}
  {% if widget == 'single_text' %}
    {% set attr = attr|merge({'data-controller': 'date-time-picker', 'data-date-time-picker-enable-time-value': 'true'}) -%}
    {% set attr = attr|merge({'data-time_24hr': 'true'}) -%}
    {%- if not valid -%}{% set attr = attr|merge({class: (attr.class|default('') ~ ' is-invalid')|trim}) -%}{%- endif -%}
    {%- if help is not empty -%}{%- set widget_attr = {attr: {'aria-describedby': id ~ "_help"}} -%}{%- endif -%}
    {# Its hardcoded for the symfony format because the patterns don't match #}
    {% if format is defined and format == 'dd/MM/yyyy HH:mm' %}{% set attr = attr|merge({'data-date-format': 'd/m/Y H:i'}) -%}{% endif %}
    {# The format needs to be defined before any min or max date #}
    {% if minimum_date %}{% set attr = attr|merge({'data-min-date': minimum_date|date('d/m/Y')}) -%}{% endif %}
    {% if maximum_date %}{% set attr = attr|merge({'data-max-date': maximum_date|date('d/m/Y')}) -%}{% endif %}
    {% if read_only is defined and read_only %}{% set attr = attr|merge({'readonly': 'readonly'}) -%}{% endif %}
    {% if disabled %}{% set attr = attr|merge({'disabled': 'disabled'}) -%}{% endif %}
    {% if required %}{% set attr = attr|merge({'required': 'required'}) -%}{% endif %}

    <div class="input-group">
      <div class="input-group-text">
        <i class="fas fa-calendar"></i>
      </div>
      {{- block('form_widget_simple') -}}
    </div>

    {{- form_errors(form) -}}
    {{- form_help(form) -}}
  {% else %}
    {% if dont_render_row is not defined or not dont_render_row %}
      <div class="row align-items-center">
    {% endif %}

    <div class="col-md-3">
      {%- if label is not same as(false) -%}{{ form_label(form.date, null, { 'label_attr': {'class': 'visually-hidden'} }) }}{%- endif -%}
      {{ form_widget(form.date) }}
    </div>
    <span>{{ divider }}</span>
    <div class="col-md-3">
      {%- if label is not same as(false) -%}{{ form_label(form.time, null, { 'label_attr': {'class': 'visually-hidden'} }) }}{%- endif -%}
      {{ form_widget(form.time) }}
    </div>

    {% if dont_render_row is not defined or not dont_render_row %}
      </div>
    {% endif %}
  {% endif %}
  {{- form_help(form) -}}
{%- endblock datetime_widget %}

{% block select_2_errors %}
  {% if errors|length > 0 -%}
    {%- for error in errors -%}
      <div class="invalid-feedback d-block">{{ error.message }}</div>
    {%- endfor -%}
  {%- endif %}
{% endblock select_2_errors %}

{% block select_2_widget %}
  <select
    name="{{ full_name }}"
    id="{{ id }}"
    {% set attr = attr|merge({'class': attr.class|default('select2')}) %}
    {{ form.vars.multiple ? 'multiple' : '' }}
    {{ block('widget_attributes') }}
  >
    {% if value is not empty %}

      {% if select2_value is iterable %}
        {% for key, value in select2_value %}
          <option value="{{ key }}" selected="selected">{{ value }}</option>
        {% endfor %}
      {% else %}
        <option value="{{ value }}" selected="selected">{{ select2_value }}</option>
      {% endif %}

    {% endif %}
  </select>
{% endblock %}

{% block form_help -%}
  {% set row_class = row_attr.class|default('') %}
  {% set help_class = ' form-text' %}
  {% if 'input-group' in row_class %}
    {#- Hack to properly display help with input group -#}
    {% set help_class = ' input-group-text' %}
  {% endif %}
  {%- if help is not empty -%}
    {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ help_class ~ ' mb-0')|trim}) -%}
  {%- endif -%}

  {%- if help is not empty -%}
    {%- set help_attr = help_attr|merge({class: (help_attr.class|default('') ~ ' help-text')|trim}) -%}
    {%- if help_html is same as(false) -%}
    <p id="{{ id }}_help"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
    {%- else -%}
      <div id="{{ id }}_help"{% with { attr: help_attr } %}{{ block('attributes') }}{% endwith %}>
    {%- endif -%}
    {%- if translation_domain is same as(false) -%}
      {%- if help_html is same as(false) -%}
        {{- help -}}
      {%- else -%}
        {{- help|raw -}}
      {%- endif -%}
    {%- else -%}
      {%- if help_html is same as(false) -%}
        {{- help|trans(help_translation_parameters, translation_domain) -}}
      {%- else -%}
        {{- help|trans(help_translation_parameters, translation_domain)|raw -}}
      {%- endif -%}
    {%- endif -%}
    {%- if help_html is same as(false) -%}
      </p>
    {%- else -%}
      </div>
    {%- endif -%}
  {%- endif -%}
{%- endblock form_help %}

{% block repeated_password_strength_row %}
  <div data-controller="password-strength-checker" data-password-strength-checker-route-value="{{ path('admin_user_ajax_password_strength') }}">
    {{ form_row(form.first, {attr: form.first.vars.attr|merge({'data-password-strength-checker-target': 'input', 'data-action': 'input->password-strength-checker#calculateStrength'})}) }}
    {{ include('user/password-strength-meter.html.twig') }}
  </div>
  {{ form_row(form.second) }}
{% endblock %}

{%- block toggle_password_widget -%}
  <div class="{{ toggle_container_classes|join(' ') }}">{{ block('password_widget') }}</div>
{%- endblock toggle_password_widget -%}
